using System;

class Program
{
    static void Main(string[] args)
    {
        ProgramManager manager = new ProgramManager();

        // Adding some students
        manager.AddStudent(new Student(1, "Alice", 20, "Computer Science", 3.5));
        manager.AddStudent(new Student(2, "Bob", 22, "Mathematics", 3.8));

        // Display all students
        Console.WriteLine("All students:");
        foreach (var student in manager.GetAllStudents())
        {
            Console.WriteLine(student);
        }

        // Find a student by ID
        int idToFind = 1;
        var foundStudent = manager.GetStudentById(idToFind);
        if (foundStudent != null)
        {
            Console.WriteLine($"\nFound student with ID {idToFind}:");
            Console.WriteLine(foundStudent);
        }
        else
        {
            Console.WriteLine($"\nStudent with ID {idToFind} not found.");
        }

        // Remove a student
        manager.RemoveStudent(1);

        // Display all students after removal
        Console.WriteLine("\nAll students after removal:");
        foreach (var student in manager.GetAllStudents())
        {
            Console.WriteLine(student);
        }
    }
}

1. Класс Student
public class Student
{
    public int Id { get; set; }
    public string Name { get; set; }
    public int Age { get; set; }
    public string Major { get; set; }
    public double GPA { get; set; }

    public Student(int id, string name, int age, string major, double gpa)
    {
        Id = id;
        Name = name;
        Age = age;
        Major = major;
        GPA = gpa;
    }

    public override string ToString()
    {
        return $"{Id}: {Name}, Age: {Age}, Major: {Major}, GPA: {GPA}";
    }
}
2. Класс ProgramManager
using System.Collections.Generic;

public class ProgramManager
{
    private List<Student> students;

    public ProgramManager()
    {
        students = new List<Student>();
    }

    public void AddStudent(Student student)
    {
        students.Add(student);
    }

    public void RemoveStudent(int studentId)
    {
        students.RemoveAll(s => s.Id == studentId);
    }

    public Student GetStudentById(int studentId)
    {
        return students.Find(s => s.Id == studentId);
    }

    public List<Student> GetAllStudents()
    {
        return students;
    }
